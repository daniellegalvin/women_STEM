summarize(sum(MW_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(MW_gender_tt>0)/nrow(.)) %>%
summarize(sum(SO_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(SO_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(NE_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(RM_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(WC_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(SW_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(NW_gender_tt>0)/nrow(.))
all_data <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(region))+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
all_data
graph_2 <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()
graph_2
graph_2 <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_y_log10()
graph_2
graph_2 <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
scale_y_log10()
graph_2
graph_2 <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
graph_2
# scale_y_log10()+
# scale_y_log10()+
graph_2 <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
# scale_y_log10()+
labs(x="Position", y="Number of people employed")
graph_2
gender_position
all_data <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(region))+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
all_data
gender_position <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
# scale_y_log10()+
labs(x="Position", y="Number of people employed")
gender_position
region_gender <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=region, y=value))+
geom_boxplot()
region_gender
region_gender <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=region, y=value, color=gender))+
geom_boxplot()
region_gender
region_gender <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=region, y=value, fill=gender))+
geom_boxplot()
region_gender
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()+
scale_fill_manual(values=wes_palette("Darjeeling1"))
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()+
facet_wrap(vars(position))
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_violin()+
facet_wrap(vars(position))
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()+
facet_wrap(vars(position))
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
filter(position==("tt")) %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()
color_region
library(brms)
library(tidyverse)
library(tidybayes)
library(wesanderson)
data <- read.csv("Data/WSTEM_data.csv")
head(data)
gender_data <- data %>%
mutate(gender=case_when(gender=="male" ~ "male",
gender=="unknown" ~ "unknown",
TRUE ~ "female")) %>%
mutate(position=case_when(position=="tt"~"tt",
TRUE ~ "instructor"))
triple_mod <- brm(number ~ 1+gender*position*region,
family=poisson(link="log"),
data=gender_data %>% filter(gender==c("female", "male")),
prior=c(prior(normal(0.5,0.3), class="b"),
prior(normal(-0.2, 0.3), class="b", coef="regionRM"),
prior(normal(-1,0.3), class="b", coef="regionNW"),
prior(normal(1,0.5), class="Intercept")),
file="triple_mod.RDS",
file_refit="on_change",
iter=4000, chains=3)
pp_check(triple_mod, type="stat_grouped", group="gender")
pp_check(triple_mod, type="stat_grouped", group="region")
pp_check(triple_mod, type="stat_grouped", group="position")
triple_mod <- brm(number ~ 1+gender*position*region,
family=poisson(link="log"),
data=gender_data %>% filter(gender==c("female", "male")),
prior=c(prior(normal(0.5,0.3), class="b"),
prior(normal(-0.2, 0.3), class="b", coef="regionRM"),
prior(normal(-0.8,0.3), class="b", coef="regionNW"),
prior(normal(1,0.5), class="Intercept")),
file="triple_mod.RDS",
file_refit="on_change",
iter=4000, chains=3)
saveRDS(triple_mod, file="triple_mod.RDS")
pp_check(triple_mod, type="stat_grouped", group="gender")
pp_check(triple_mod, type="stat_grouped", group="region")
pp_check(triple_mod, type="stat_grouped", group="position")
cond_data <- distinct(triple_mod$data) %>%
select(-number)
mod_posts <- add_epred_draws(triple_mod, newdata=cond_data)
mod_posts$.row=NULL #had to do this to make R stop forcing the .row column grouping, does not influence calculations
#Making a data frame that I can use to calculate credible intervals
test <- mod_posts %>%
select(-.chain, -.iteration) %>%
distinct() %>%
pivot_wider(names_from = "gender", values_from = ".epred") %>%
mutate(diff = male - female)
#Another data frame which I can use to calculate region and position specific values
specific <- test %>%
select(-diff) %>%
pivot_wider(id_cols=c(region, .draw),
names_from=position,
values_from=c("female", "male")) %>%
pivot_wider(id_cols=c(.draw),
names_from=region,
values_from=c("female_tt", "male_tt", "female_instructor", "male_instructor"))
#Median credible interval for the difference in men and women at each position by region
test %>%
group_by(region, position) %>%
median_qi(diff)
#Median credible interval for the number of women in each position by region
test %>%
group_by(region, position) %>%
median_qi(female)
#Median credible interval for the number of men in each position by region
test %>%
group_by(region, position) %>%
median_qi(male)
#Calculating the differences in female_tt by region
tt_diff <- specific %>%
mutate(MW_SO_f_tt=female_tt_MW-female_tt_SO) %>%
mutate(MW_NE_f_tt=female_tt_MW-female_tt_NE) %>%
mutate(MW_RM_f_tt=female_tt_MW-female_tt_RM) %>%
mutate(MW_WC_f_tt=female_tt_MW-female_tt_WC) %>%
mutate(MW_SW_f_tt=female_tt_MW-female_tt_SW) %>%
mutate(MW_NW_f_tt=female_tt_MW-female_tt_NW)
#Calculating the difference between men and women employed in tt positions by region
gender_tt_diff <- specific %>%
mutate(MW_gender_tt=male_tt_MW-female_tt_MW) %>%
mutate(SO_gender_tt=male_tt_SO-female_tt_SO) %>%
mutate(NE_gender_tt=male_tt_NE-female_tt_NE) %>%
mutate(RM_gender_tt=male_tt_RM-female_tt_RM) %>%
mutate(WC_gender_tt=male_tt_WC-female_tt_WC) %>%
mutate(SW_gender_tt=male_tt_SW-female_tt_SW) %>%
mutate(NW_gender_tt=male_tt_NW-female_tt_NW)
tt_diff %>%
summarize(higher=sum(MW_SO_f_tt>0)/nrow(.))
tt_diff %>%
summarize(higher=sum(MW_SO_f_tt>0)/nrow(.))
#19.6 % probability that the selected schools in the Midwest have more women employed in tt positions compared to selected schools in the South.
tt_diff %>%
summarize(higher=sum(MW_NE_f_tt>0)/nrow(.))
# < 0.1 % probability that the selected schools in the Midwest have more women employed in tt positions compared to selected schools in the Northeast.
#NOTE THAT YOU CAN NEVER HAVE 0 OR 100, ONLY  LESS THAN 0.1 OR GREATER THAN 99.9
tt_diff %>%
summarize(higher=sum(MW_RM_f_tt>0)/nrow(.))
#92.9 % probability that the selected schools in the Midwest have more women employed in tt positions compared to selected schools in the Rocky Mountain region.
tt_diff %>%
summarize(higher=sum(MW_WC_f_tt>0)/nrow(.))
# < 0.1 % probability that the selected schools in the Midwest have more women employed in tt positions compared to selected schools on the West Coast.
tt_diff %>%
summarize(higher=sum(MW_SW_f_tt>0)/nrow(.))
# 0.12 % probability that the selected schools in the Midwest have more women employed in tt positions compared to selected schools in the Southwest region.
tt_diff %>%
summarize(higher=sum(MW_NW_f_tt>0)/nrow(.))
tt_diff %>%
summarize(higher=sum(MW_RM_f_tt>0)/nrow(.))
tt_diff %>%
summarize(higher=sum(MW_WC_f_tt>0)/nrow(.))
tt_diff %>%
summarize(higher=sum(MW_SW_f_tt>0)/nrow(.))
tt_diff %>%
summarize(higher=sum(MW_NW_f_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(MW_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(SO_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(NE_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(RM_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(WC_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(SW_gender_tt>0)/nrow(.))
gender_tt_diff %>%
summarize(sum(NW_gender_tt>0)/nrow(.))
all_data <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(region))+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
all_data
gender_position <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
# scale_y_log10()+
labs(x="Position", y="Number of people employed")
gender_position
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
filter(position==("tt")) %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()
color_region
color_region <- test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
filter(position==("tt")) %>%
ggplot(aes(x=gender, y=value, fill=region))+
geom_boxplot()+
labs(x="Gender", y="Number of people employed")
color_region
triple_mod$data
View(gender_data)
sd_mod <- brm(number ~ 1+gender*position*SD,
family=poisson(link="log"),
data=gender_data %>% filter(gender==c("female", "male")),
prior=c(prior(normal(0.5,0.3), class="b"),
prior(normal(1,0.5), class="Intercept")),
file="sd_mod.RDS",
file_refit="on_change",
iter=4000, chains=3)
saveRDS(sd_mod, file="sd_mod.RDS")
pp_check(sd_mod, type="stat_grouped", group="gender")
pp_check(sd_mod, type="stat_grouped", group="SD")
pp_check(sd_mod, type="stat_grouped", group="position")
sd_cond_data <- distinct(sd_mod$data) %>%
select(-number)
sd_mod_posts <- add_epred_draws(sd_mod, newdata=sd_cond_data)
sd_mod_posts$.row=NULL #had to do this to make R stop forcing the .row column grouping, does not influence calculations
#Making a data frame that I can use to calculate credible intervals
sd_test <- sd_mod_posts %>%
select(-.chain, -.iteration) %>%
distinct() %>%
pivot_wider(names_from = "gender", values_from = ".epred") %>%
mutate(diff = male - female)
#Another data frame which I can use to calculate region and position specific values
sd_specific <- sd_test %>%
select(-diff) %>%
pivot_wider(id_cols=c(SD, .draw),
names_from=position,
values_from=c("female", "male")) %>%
pivot_wider(id_cols=c(.draw),
names_from=SD,
values_from=c("female_tt", "male_tt", "female_instructor", "male_instructor"))
#Median credible interval for the difference in men and women at each position by region
sd_test %>%
group_by(SD, position) %>%
median_qi(diff)
sd_test %>%
group_by(SD, position) %>%
median_qi(female)
test %>%
group_by(SD, position) %>%
median_qi(male)
#Median credible interval for the number of men in each position by sd
test %>%
group_by(SD, position) %>%
median_qi(male)
#Median credible interval for the number of men in each position by sd
sd_test %>%
group_by(SD, position) %>%
median_qi(male)
sd_specific
#Calculating the differences in female_tt by region and the difference between men and women employed in tt
sd_tt_diff <- sd_specific %>%
mutate(y_n_f_tt=female_tt_y-female_tt_n) %>%
mutate(m_f_sd_tt=male_tt_y-female_tt_y) %>%
mutate(m_f_notsd_tt=male_tt_n-female_tt_n)
#Median credible interval for the difference in men and women at each position by sd
sd_test %>%
group_by(SD, position) %>%
median_qi(diff)
#Median credible interval for the number of women in each position by sd
sd_test %>%
group_by(SD, position) %>%
median_qi(female)
#Median credible interval for the number of men in each position by sd
sd_test %>%
group_by(SD, position) %>%
median_qi(male)
#Calculating the differences in female_tt by region and the difference between men and women employed in tt
sd_tt_diff <- sd_specific %>%
mutate(y_n_f_tt=female_tt_y-female_tt_n) %>%
mutate(m_f_sd_tt=male_tt_y-female_tt_y) %>%
mutate(m_f_notsd_tt=male_tt_n-female_tt_n)
sd_tt_diff %>%
summarize(higher=sum(y_n_f_tt>0)/nrow(.))
sd_tt_diff %>%
summarize(higher=sum(m_f_sd_tt>0)/nrow(.))
sd_tt_diff %>%
summarize(higher=sum(m_f_notsd_tt>0)/nrow(.))
sd_data <- sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(sd))+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
sd_data
sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()
sd_data <- sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(SD))+
scale_y_log10()+
labs(x="Position", y="Number of people employed")
sd_data
sd_data <- sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_violin()+
scale_fill_manual(values=wes_palette("Darjeeling1"))+
# geom_point(data=gender_data %>% filter(gender==c("female", "male")), aes(x=position, y=number),
#            size=1,
#            position=position_dodge(width=0.9))+    remove the silence to display the points
facet_wrap(vars(SD))+
labs(x="Position", y="Number of people employed")
sd_data
sd_gender_position <- sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
ggplot(aes(x=position, y=value, fill=gender))+
geom_boxplot()+
# scale_y_log10()+
labs(x="Position", y="Number of people employed")
sd_gender_position
labs(x="Gender", y="Number of people employed")
sd_color <- sd_test %>%
pivot_longer(cols=c("female", "male"),
names_to="gender",
values_to="value") %>%
filter(position==("tt")) %>%
ggplot(aes(x=gender, y=value, fill=SD))+
geom_boxplot()+
labs(x="Gender", y="Number of people employed")
sd_color
install.packages("rlang")
remove.packages("rlang", lib="~/R/win-library/4.1")
install.packages("rlang")
library(brms)
install.packages("rlang")
remotes::install_github("r-lib/rlang")
library(brms)
library(tidyverse)
install.packages(c("bayesplot", "brew", "brio"))
install.packages(c("broom", "cli", "clipr"))
install.packages(c("colorspace", "cpp11", "credentials"))
install.packages(c("data.table", "DBI", "devtools", "diffobj", "digest"))
install.packages(c("dplyr", "dtplyr", "evaluate", "fansi", "gert"))
install.packages(c("ggdist", "jsonlite", "knitr", "lme4", "magrittr"))
install.packages(c("memoise", "mvtnorm", "nloptr", "openssl", "optimx"))
install.packages(c("pkgload", "rcmdcheck", "Rcpp", "RcppArmadillo", "RcppParallel"))
install.packages(c("readr", "remotes", "rmarkdown", "rsconnect", "rstan"))
install.packages(c("rmarkdown", "rvest", "sessioninfo", "testthat", "tibble"))
install.packages(c("tidybayes", "tidyr", "tinytex", "tzdb", "usethis"))
install.packages(c("uuid", "V8", "xml2"))
library(brms)
library(tidyverse)
update.packages("dbplyr")
library(brms)
library(tidyverse)
